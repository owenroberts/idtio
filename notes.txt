4.25.2018
- have i been thinking/doing nothing for long enough?
- looking at node/sockets tuts
	- https://rainingchain.com/tutorial/nodejs (2016 video series)
		- db
	- https://hackernoon.com/how-to-build-a-multiplayer-browser-game-4a793818c29b (2016 article)
		- https://github.com/penumbragames/tankanarchy
	- https://modernweb.com/building-multiplayer-games-with-node-js-and-socket-io/ (2013 article)

4.26.2018
- uku bg music
- http://www.abbamoses.com/fiddledo/fiddlepage

5.1.2018
- need to clean up back and forth w server and client
- need to add a new character to test
- response when character is not available ...

5.3.2018
- multiple players from raining chain
5.7.2018
	- list of sockets and players
	- seems pointless but see where it goes
	- update position
- ep 5 - oop and bullets
	- entity object for player and bullets
	- i prob dont have other moving things but maybe?
	- extending player object with functions from socket events
	- need to oop my code
- maybe if you satisfy some parameters than you can chat in lines font
- change animation state 
	- either in backend on movement
	- or in front using x/y speed

5.8.2018
- can't set game interval multiple times
- intro screen msg if characters aren't available, only show available characters
- player attacks vid
	- mouse events (not for shooting bullets)
	- distance 

5.9.2018
- login system
	- uses mongo, maybe dont need this
	- maybe use firebase instead?

5.11.2018
- client state
	- // init - all data on player
	- // update - only changed data
		- sending all data for players ....
		- he sort of does too
	- // remove - if player is removed

5.18.2018
- player v player
	- get init pack and get update pack
	- only send changed values (eventually) how to see if they changed
- polishing and map
	- player stays in center, map moves relative
	- client takes position and subtracts from player position
- hosting
	- heroku
- map system
	- using 2 different maps
	- 

6.5.2019
- oops
- figure out player movement
6.6.2018
	- now figure out interactives
- performance profiling
	- text very expensive (not using text except for stats)
	- this could be useful for bc
	- adds a canvas for the score (this doesn't help me because lines always need to be redrawn)
	- server profiling
		- npm install v8-profiler
		- const profiler = require('v8-profiler');
		const fs = require('fs');
- user interface and player commands
	- adding html buttons - dont need this
- chat and private message - skip for now
- inventory and multi files
	- ./Entity.js
	- player and interactive and bkg could all be entities
	- inventory from HTML5 game example
	- what items a player has i guess
	- come back when adding flowers etc
- item system
	- didn't really address where items go on the canvas ...

6.7.2018
- save player progress
	- i guess i probably should save the user progress....
	- firebase vs mongo 
- scenery in scene
- letter system/ui
	- actually not too hard!	
	- text should go in game lib?

- interactives in scene
	- collision change
6.8.2018
6.11.2018
	- send to socket
6.12.201=
	- clear up msg/text names
- clear up naming entity, item, interactive etc server/client

- trigger animation state after interactive text
	- interactive trigger state
	- capture player input

- more map assets
- stop player controls when interacting
	- with pick ups
- skip drawing if sprite isn't in scene
- fix reload errors
- something to kick player off when they stop doing stuff
- only send necessary package info
- map borders - map edges
- ui data
- figure out center without calling it over and over
	- for ui, interactive classes, could just center the perm x
	- for sprite could introduce origin or offest value
- player interactions
